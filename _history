{"entries":[{"timestamp":1739412812774,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" id=\"+:-YOjJTsgq=Lny?9dcL\" x=\"20\" y=\"20"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start"],[0,"\"></"]],"start1":12,"start2":12,"length1":135,"length2":62},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," id=\"lLt$v.Cmk:b;H*jSksO}\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":49,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"enum PingUnit {\n    //% block=\"Î¼s\"\n    MicroSeconds,\n    //% block=\"cm\"\n    Centimeters,\n    //% block=\"inches\"\n    Inches\n}\n\n/**\n * Ultrasonic and ping utilities\n */\n//% color=\"#2c3e50\" weight=1 icon=\"\\uf0ad\"\nnamespace ultrasonic {\n    /**\n     * Send a ping and get the echo time (in microseconds) as a result\n     * @param trig tigger pin\n     * @param echo echo pin\n     * @param unit desired conversion unit\n     * @param maxCmDistance maximum distance in centimeters (default is 500)\n     */\n    //% blockId=sonar_ping block=\"ping trig %trig|echo %echo|unit %unit\"\n    export function ping(trig: DigitalPin, echo: DigitalPin, unit: PingUnit, maxCmDistance = 500): number {\n        // send pulse\n        pins.setPull(trig, PinPullMode.PullNone);\n        pins.digitalWritePin(trig, 0);\n        control.waitMicros(2);\n        pins.digitalWritePin(trig, 1);\n        control.waitMicros(10);\n        pins.digitalWritePin(trig, 0);\n\n        // read pulse\n        const d = pins.pulseIn(echo, PulseValue.High, maxCmDistance * 58);\n\n        switch (unit) {\n            case PingUnit.Centimeters: return Math.idiv(d, 58);\n            case PingUnit.Inches: return Math.idiv(d, 148);\n            default: return d;\n        }\n    }\n}"],[1,"\n"]],"start1":0,"start2":0,"length1":1226,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":242,"start2":242,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1739412812773,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Ultrasonic - bplab\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1739412847641}